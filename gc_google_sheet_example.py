import gspread
from google.oauth2.service_account import Credentials
from pprint import pprint

# Your provided data
LEXICON_CATALOG_CATEGORIES = {
    "racetami": "üß† –†–∞—Ü–µ—Ç–∞–º—ã",
    "holinergetiki": "‚ö° –•–æ–ª–∏–Ω–µ—Ä–≥–∏–∫–∏",
    "stimulators": "üöÄ –°—Ç–∏–º—É–ª—è—Ç–æ—Ä—ã / –î–æ—Ñ–∞–º–∏–Ω–µ—Ä–≥–∏—á–µ—Å–∫–∏–µ",
    "neiroprotectors": "üõ°Ô∏è –ù–µ–π—Ä–æ–ø—Ä–æ—Ç–µ–∫—Ç–æ—Ä—ã",
    "adaptogeni": "‚öñÔ∏è –ê–¥–∞–ø—Ç–æ–≥–µ–Ω—ã / –≠–Ω–¥–æ–∫—Ä–∏–Ω–Ω—ã–µ –º–æ–¥—É–ª—è—Ç–æ—Ä—ã",
    "antidepressanti": "üòå –ê–Ω—Ç–∏–¥–µ–ø—Ä–µ—Å—Å–∞–Ω—Ç—ã / –ê–Ω–∫—Å–∏–æ–ª–∏—Ç–∏–∫–∏",
    "metabolicheskie": "üî¨ –ú–µ—Ç–∞–±–æ–ª–∏—á–µ—Å–∫–∏–µ / –î—Ä—É–≥–∏–µ",
}

LEXICON_ITEMS = {
    "7-oho": {
        "price": 3400,
        "quantity": "30 –∫–∞–ø—Å—É–ª",
        "dosage": "100 –º–≥",
        "description": "7-OXO (7-KETO-DHEA) - –£—Å–∫–æ—Ä—è–µ—Ç –º–µ—Ç–∞–±–æ–ª–∏–∑–º, –ø–æ–≤—ã—à–∞–µ—Ç —ç–Ω–µ—Ä–≥–∏—é. –ù–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –≥–æ—Ä–º–æ–Ω—ã –Ω–∞–ø—Ä—è–º—É—é.",
        "category": "metabolicheskie"
    },
    "9-me-bc": {
        "price": 1500,
        "quantity": "30 –∫–∞–ø—Å—É–ª",
        "dosage": "10 –º–≥",
        "description": "9-ME-BC - –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–æ—Ñ–∞–º–∏–Ω–æ–≤—ã–µ –Ω–µ–π—Ä–æ–Ω—ã. –£–ª—É—á—à–∞–µ—Ç –º–æ—Ç–∏–≤–∞—Ü–∏—é –∏ –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.",
        "category": "stimulators"
    },
    "aicar": {
        "price": 1500,
        "quantity": "30 –∫–∞–ø—Å—É–ª",
        "dosage": "10 –º–≥",
        "description": "AICAR - –ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç AMPK, —É–ª—É—á—à–∞–µ—Ç –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å –∏ –º–µ—Ç–∞–±–æ–ª–∏–∑–º –≥–ª—é–∫–æ–∑—ã.",
        "category": "metabolicheskie"
    },
    "amino-tadalafil": {
        "price": 1600,
        "quantity": "60 –∫–∞–ø—Å—É–ª",
        "dosage": "5+5 –º–≥",
        "description": "AMINO-TADALAFIL (WITH BIOPERINE) - –ö–æ–º–±–∏–Ω–∞—Ü–∏—è —Ç–∞–¥–∞–ª–∞—Ñ–∏–ª–∞ –∏ –±–∏–æ–ø–µ—Ä–∏–Ω–∞. –£–ª—É—á—à–∞–µ—Ç –∫—Ä–æ–≤–æ–æ–±—Ä–∞—â–µ–Ω–∏–µ –∏ –ª–∏–±–∏–¥–æ.",
        "category": "adaptogeni"
    },
    "aniracetam": {
        "price": 1400,
        "quantity": "30 –∫–∞–ø—Å—É–ª",
        "dosage": "300 –º–≥",
        "description": "ANIRACETAM - –£–ª—É—á—à–∞–µ—Ç –ø–∞–º—è—Ç—å –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, —Å–Ω–∏–∂–∞–µ—Ç —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å. –î–µ–π—Å—Ç–≤—É–µ—Ç —á–µ—Ä–µ–∑ AMPA-—Ä–µ—Ü–µ–ø—Ç–æ—Ä—ã.",
        "category": "racetami"
    },
    # Add other items similarly with appropriate category assignments
}

# Initialize Google Sheets client
SCOPES = ['https://www.googleapis.com/auth/spreadsheets', 'https://www.googleapis.com/auth/drive']
CREDS_FILE = 'creds.json'  # Replace with your JSON credentials file path
SPREADSHEET_ID = '1gWctti68rVN7yDrQYH75Cx7ziDYOx13OKAZftEJ2lQQ'  # Replace with your Google Sheet ID


def initialize_sheets_client():
    creds = Credentials.from_service_account_file(CREDS_FILE, scopes=SCOPES)
    client = gspread.authorize(creds)
    return client


def setup_sheets(spreadsheet):
    # Get or create Categories worksheet
    try:
        categories_sheet = spreadsheet.worksheet('Categories')
        # Clear existing data to avoid duplicates
        categories_sheet.clear()
    except gspread.exceptions.WorksheetNotFound:
        categories_sheet = spreadsheet.add_worksheet(title='Categories', rows=100, cols=10)

    # Setup Categories headers
    categories_sheet.update('A1:B1', [['Category ID', 'Category Name']])

    # Populate categories
    category_data = [[k, v] for k, v in LEXICON_CATALOG_CATEGORIES.items()]
    categories_sheet.append_rows(category_data)

    # Get or create Items worksheet
    try:
        items_sheet = spreadsheet.worksheet('Items')
        # Clear existing data to avoid duplicates
        items_sheet.clear()
    except gspread.exceptions.WorksheetNotFound:
        items_sheet = spreadsheet.add_worksheet(title='Items', rows=100, cols=10)

    # Setup Items headers
    items_sheet.update('A1:F1', [['Item ID', 'Category ID', 'Price', 'Quantity', 'Dosage', 'Description']])

    # Populate items
    item_data = [
        [item_id, item_info['category'], item_info['price'], item_info['quantity'],
         item_info['dosage'], item_info['description']]
        for item_id, item_info in LEXICON_ITEMS.items()
    ]
    items_sheet.append_rows(item_data)

    return categories_sheet, items_sheet


def get_all_items(spreadsheet):
    items_sheet = spreadsheet.worksheet('Items')
    return items_sheet.get_all_records()


def get_items_by_category(spreadsheet, category_id):
    items_sheet = spreadsheet.worksheet('Items')
    records = items_sheet.get_all_records()
    return [record for record in records if record['Category ID'] == category_id]


def get_item_by_id(spreadsheet, item_id):
    items_sheet = spreadsheet.worksheet('Items')
    records = items_sheet.get_all_records()
    for record in records:
        if record['Item ID'] == item_id:
            return record
    return None


def add_category(spreadsheet, category_id, category_name):
    categories_sheet = spreadsheet.worksheet('Categories')
    categories_sheet.append_row([category_id, category_name])
    print(f"Added category: {category_name}")


def add_item(spreadsheet, item_id, category_id, price, quantity, dosage, description):
    items_sheet = spreadsheet.worksheet('Items')
    items_sheet.append_row([item_id, category_id, price, quantity, dosage, description])
    print(f"Added item: {item_id}")


def main():
    # Initialize client and open existing spreadsheet
    client = initialize_sheets_client()
    spreadsheet = client.open_by_key(SPREADSHEET_ID)

    # Setup sheets with initial data
    categories_sheet, items_sheet = setup_sheets(spreadsheet)

    # Example operations
    print("All Items:")
    pprint(get_all_items(spreadsheet))

    print("\nItems in 'racetami' category:")
    pprint(get_items_by_category(spreadsheet, 'racetami'))

    print("\nItem with ID 'aniracetam':")
    pprint(get_item_by_id(spreadsheet, 'aniracetam'))

    # Add a new category
    add_category(spreadsheet, 'new_category', 'üÜï –ù–æ–≤–∞—è –ö–∞—Ç–µ–≥–æ—Ä–∏—è')

    # Add a new item
    add_item(
        spreadsheet,
        item_id='new_item',
        category_id='racetami',
        price=2000,
        quantity='30 –∫–∞–ø—Å—É–ª',
        dosage='50 –º–≥',
        description='New item description'
    )


if __name__ == '__main__':
    main()